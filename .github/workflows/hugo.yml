name: Build and Deploy to GH Pages

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

#nightly to keep statistics updated
  schedule:
    - cron:  '12 0 * * *'

# Default to bash
defaults:
  run:
    shell: sh

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.127.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Install GoLang
        run: sudo snap install go --classic
      - name: Checkout
        uses: actions/checkout@v4
      - name: Checkout Kaoto
        uses: actions/checkout@v4
        with:
          repository: 'KaotoIO/kaoto'
          path: 'tmp/kaoto'
          fetch-depth: '0'
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
          TZ: America/Los_Angeles
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"          
      - name: Generate Pagefind search index
        run: npx pagefind --site "public"
      - name: Setup CNAME correctly
        if: always()
        run:  cp CNAME public/CNAME
      
      -
        name: Deploy to GitHub Pages
        if: success() && github.event_name != 'pull_request'
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: public
          build_dir: public
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
